name: Build and release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 16.19.0

      - name: Get node deps
        run: yarn

      - name: Get garage
        run: yarn garage:init

      - name: Make envfile
        uses: ozaytsev86/create-env-file@v1
        with:
          file-name: './hawk.garage/.env'
          ENV_VUE_APP_API_ENDPOINT: ${{ secrets.VUE_APP_API_ENDPOINT }}
          ENV_VUE_APP_HAWK_TOKEN: ${{ secrets.VUE_APP_HAWK_TOKEN }}
          ENV_VUE_APP_CLOUDPAYMENTS_PUBLIC_ID: ${{ secrets.VUE_APP_CLOUDPAYMENTS_PUBLIC_ID }}

      - name: Build garage
        run: yarn garage:build

      - name: Upgrade garage's index.html file
        run: yarn garage:inject-script

      - name: Build (without release)
        run: yarn electron:prebuild && yarn electron:build --publish never

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
